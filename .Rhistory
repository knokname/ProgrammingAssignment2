makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
a <- makeCacheMAtrix(matrix(1:4,2))
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getinverse()
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data,...)  ## returns inverse of matrix data <- x
x$setinverse(m)
m
}
a$set
a$set(matrix(5:8,2))
a$get()
cachesolve(a)
cacheSolve(a)
cacheSolve(a)
a$getinverse()
